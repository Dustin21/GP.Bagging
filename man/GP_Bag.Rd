% Generated by roxygen2 (4.0.2): do not edit by hand
\name{GP_Bag}
\alias{GP_Bag}
\title{Bagging Gaussian Process Regression}
\usage{
GP_Bag(dat.train, x.test, y.test, iterations = 10, n = dim(dat.train)[1],
  ...)
}
\arguments{
\item{dat.train}{Data.frame of training set with output obs on last column.}

\item{x.test}{Data.frame of test set.}

\item{y.test}{Vector of test observations.}

\item{n}{The number of observations in the training set. Default it set to dim(dat.train)[1].}

\item{...}{Further arguments inherent in \code{GP_fit} function of package \code{GPfit}.}

\item{iterations.}{number of iterations of the bagging algorithm. Default is 10.}
}
\value{
rbound List. \code{[[1]]} calls prediction averages, \code{[[2]]} calls sdev averages.
}
\description{
This function returns a list containing the bagged prediction averages,
standard deviations averages, and RMSE of the bagged GP model corresponding
to a given test set.
}
\details{
\code{GP_bag} is a wrapper over the underlying \code{GP_fit()} function in the
\code{GPfit} package. Therefore, this function assumes a squared-exponential
(Gaussian) correlation function.
The parameter estimates are obtained by minimizing the deviance using a
multi-start gradient based search (L-BFGS-B) algorithm. Please see the
\code{GPfit} package details on Cran for more information on the GP method
used.
}
\note{
All training data must be scaled in \code{[0,1]^d}.
}
\examples{
### Toy Example in 2-dimensional case.
# Training set
set.seed(2)
n <- 40
x.train <- maximinLHS(n, 1)
y.train <- matrix(0, n, 1)
for(i in 1:n){ y.train[i] = (20*x.train[i])*sin(20*x.train[i]) + rnorm(length(x.train[i]),sd=1) }
dat.train <- data.frame(cbind(x.train,y.train))

# Test set
x.test <- seq(0, 1, 0.01);
y.test <- matrix(0, length(x.test), 1)
for(i in 1:length(x.test)){ y.test[i] = (20*x.test[i])*sin(20*x.test[i]) }
dat.test <- data.frame(cbind(x.test,y.test))

GP.mod <- GP_Bag(dat.train, x.test, y.test, iterations = 20, n = 40)
print(GP.mod)
}
\keyword{misc}

